#!/bin/sh

# FUZZEL_IGNORED_BINDIRS=/usr/bin:/usr/bin/core_perl:/usr/bin/site_perl:/usr/bin/vendor_perl

exit_err() {
  echo "$1" >&2
  exit 1
}

is_bindir_enabled() {
  for dir in ${_ignored_bindirs}; do
    [ "$dir" = "$1" ] && return 1
  done
  return 0
}

_fuzzel_exec=fuzzel
if command -v fuzzel-launch >/dev/null 2>&1; then
  _fuzzel_exec=fuzzel-launch
fi

_ignored_bindirs=""
if [ -n "$FUZZEL_IGNORED_BINDIRS" ]; then
  _ignored_bindirs=$(echo "$FUZZEL_IGNORED_BINDIRS" | tr ':' ' ' | sort | uniq)
fi

_bindirs=$(echo "$PATH" | tr ':' ' ' | sort | uniq)

_lsdirs=""  # Initialize _lsdirs as an empty string
for _bindir in ${_bindirs}; do
  if [ -d "$_bindir" ] && is_bindir_enabled "$_bindir"; then
    _lsdirs="$_lsdirs $_bindir"  # Use _lsdirs instead of lsdirs
  fi
done

if [ -n "$_lsdirs" ]; then
  # Use find to list executables, avoiding issues with filenames
  _execfile=$(printf '%s\n' $_lsdirs | xargs -I{} find "{}" -maxdepth 1 -type f -executable | sort | uniq | sed '/^$/d' | ${_fuzzel_exec} --dmenu)

  [ -n "$_execfile" ] || { echo "No executable was selected!"; exit 1; }

  if command -v "$_execfile" >/dev/null 2>&1; then
    exec "$_execfile"
  else
    exit_err "No executable: $_execfile"
  fi
else
  exit_err "Failed finding executables!"
fi

